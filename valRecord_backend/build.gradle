plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'kr.co.choi'
version = '0.0.1-SNAPSHOT'
description = 'valRecord_backend'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux' // WebClient

    // Security (임시 로그인/차후 RSO 보안)
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // RSO 예정이면

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Cache(선택) + Caffeine
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    // Actuator(선택)
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Session(선택) - 필요 시 하나만
    // implementation 'org.springframework.session:spring-session-core'
    // implementation 'org.springframework.session:spring-session-jdbc'
    // implementation 'org.springframework.session:spring-session-data-redis'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Dev only
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
    useJUnitPlatform()
}
